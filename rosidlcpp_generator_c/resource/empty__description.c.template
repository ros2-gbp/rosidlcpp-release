{# Included from rosidl_generator_c/resource/idl__description.c.em #}

/// Define exported TypeDescriptions and TypeSources
{ set all_type_descriptions = insert(implicit_type_descriptions, 0, toplevel_type_description) }
{% for type_description in all_type_descriptions %}
{% set td_typename = type_description.msg.type_description.type_name %}
{% set td_c_typename = replace(td_typename, "/", "__") %}

const rosidl_runtime_c__type_description__TypeDescription *
{{ td_c_typename }}__{{ GET_DESCRIPTION_FUNC }}(
  const rosidl_{{ type_description.type }})_type_support_t * type_support)
{
  (void)type_support;
  static const rosidl_runtime_c__type_description__TypeDescription description = {
    {
      {NULL, 0, 0},
      {NULL, 0, 0},
    },
    {NULL, 0, 0},
  };
  return &description;
}

const rosidl_runtime_c__type_description__TypeSource *
{{ td_c_typename }}__{{ GET_INDIVIDUAL_SOURCE_FUNC }}(
  const rosidl_{{ type_description.type }})_type_support_t * type_support)
{
  (void)type_support;
  static const rosidl_runtime_c__type_description__TypeSource source = {
    {NULL, 0, 0},
    {NULL, 0, 0},
    {NULL, 0, 0}
  };
  return &source;
}

const rosidl_runtime_c__type_description__TypeSource__Sequence *
{{ td_c_typename }}__{{ GET_SOURCES_FUNC }}(
  const rosidl_{{ type_description.type }})_type_support_t * type_support)
{
  (void)type_support;
  static const rosidl_runtime_c__type_description__TypeSource__Sequence sources = {NULL, 0, 0};
  return &sources;
}
{% endfor %}

