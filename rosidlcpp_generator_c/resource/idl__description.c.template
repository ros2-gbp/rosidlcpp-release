// generated from rosidl_generator_c/resource/idl__description.c.em
// with input from {{ package_name }}:{{ interface_path.filepath }}
// generated code does not contain a copyright notice
{% set type_description_msg = type_description_info.type_description_msg %}
{% set hash_lookup = get_hash_lookup(type_description_info.type_hashes) %}
{##}
{% set include_base = package_name + "/" + interface_path.filedir + "/detail/" + convert_camel_case_to_lower_case_underscore(interface_path.filename) %}
{% set implicit_type_descriptions = get_implicit_type_descriptions(services, actions, type_description_info) %}
{% set toplevel_type_description = get_toplevel_type_description(messages, services, actions, type_description_info) %}

#include "{{ include_base }}__functions.h"

{########################################################################}
{# Define get_type_hash functions #}
{########################################################################}
{% set full_type_descriptions = insert(implicit_type_descriptions, 0, toplevel_type_description) %}
{% for type_description in full_type_descriptions %}
{% set typename = type_description.msg.type_description.type_name %}
{% set c_typename = replace(typename, "/", "__") %}
ROSIDL_GENERATOR_C_PUBLIC_{{ package_name }}
const rosidl_type_hash_t *
{{ c_typename }}__{{ GET_HASH_FUNC }}(
  const rosidl_{{ type_description.type }}_type_support_t * type_support)
{
  (void)type_support;
  static rosidl_type_hash_t hash = {{ type_hash_to_c_definition(at(hash_lookup, typename), 4) }};
  return &hash;
}

{% endfor %}
{#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#}
{##}
{#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#}
{# Descriptions and sources functions (optionally disabled) #}
{% if disable_description_codegen %}
{% include "empty__description.c.template" %}
{% else %}
{% include "full__description.c.template" %}
{% endif %}
{#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#}
