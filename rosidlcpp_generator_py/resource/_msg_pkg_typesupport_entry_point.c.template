{# Included from rosidl_generator_py/resource/_idl_pkg_typesupport_entry_point.c.em #}
{% set include_base = package_name + "/" + interface_path.filedir + "/detail/" + convert_camel_case_to_lower_case_underscore(interface_path.filename) %}
{% set header_type_support = include_base + "__type_support.h" %}
{% set header_struct = include_base + "__struct.h" %}
{% set header_functions = include_base + "__functions.h" %}
{% set header_files = [ "stdbool.h", "stdint.h", "rosidl_runtime_c/visibility_control.h", "rosidl_runtime_c/message_type_support_struct.h", "rosidl_runtime_c/service_type_support_struct.h", "rosidl_runtime_c/action_type_support_struct.h" ] %}
{% set header_files = push_back(push_back(push_back(header_files, header_type_support), header_struct), header_functions) %}
{% set include_directives = get_global_variable("include_directives") %}
{% set register_functions = get_global_variable("register_functions") %}
{% for header_file in header_files %}
{%     if header_file in include_directives %}
// already included above
// {%     else %}
{% set include_directives = set_global_variable("include_directives", push_back(include_directives, header_file)) %}
{%     endif %}
{%     if not string_contains(header_file, "/") %}
#include <{{ header_file }}>
{%     else %}
#include "{{ header_file }}"
{%     endif %}
{% endfor %}
{% set module_name = convert_camel_case_to_lower_case_underscore(message.type.name) %}
{% set msg_typename = join(message.type.namespaces, "__") + "__" + message.type.name %}

static void * {{ join(message.type.namespaces, "__") + "__" + module_name }}__create_ros_message(void)
{
  return {{ msg_typename }}__create();
}

static void {{join(message.type.namespaces, "__") + "__" + module_name }}__destroy_ros_message(void * raw_ros_message)
{
  {{ msg_typename }} * ros_message = ({{ msg_typename }} *)raw_ros_message;
  {{ msg_typename }}__destroy(ros_message);
}

ROSIDL_GENERATOR_C_IMPORT
bool {{ join(message.type.namespaces, "__") + "__" + module_name }}__convert_from_py(PyObject * _pymsg, void * ros_message);
ROSIDL_GENERATOR_C_IMPORT
PyObject * {{ join(message.type.namespaces, "__") + "__" + module_name }}__convert_to_py(void * raw_ros_message);


ROSIDL_GENERATOR_C_IMPORT
const rosidl_message_type_support_t *
ROSIDL_GET_MSG_TYPE_SUPPORT({{join(message.type.namespaces, ", ") + ", " + message.type.name }});

{% set register_function = "_register_msg_type__" + join(span(message.type.namespaces, 1, length(message.type.namespaces)), "__") + "__" + module_name %}
{% set register_functions = set_global_variable("register_functions", push_back(register_functions, register_function)) %}
int8_t
{{ register_function }}(PyObject * pymodule)
{
  int8_t err;
{% set function_names = ["create_ros_message", "destroy_ros_message", "convert_from_py", "convert_to_py", "type_support"] %}
{% for function_name in function_names %}

  PyObject * pyobject_{{ function_name }} = NULL;
  pyobject_{{ function_name }} = PyCapsule_New(
{%     if function_name != "type_support" %}
    (void *)&{{ join(message.type.namespaces, "__") + "__" + module_name }}__{{ function_name }},
{%     else %}
    (void *)ROSIDL_GET_MSG_TYPE_SUPPORT({{join(message.type.namespaces, ", ") + ", " + message.type.name }}),
{%     endif %}
    NULL, NULL);
  if (!pyobject_{{ function_name }}) {
    // previously added objects will be removed when the module is destroyed
    return -1;
  }
  err = PyModule_AddObject(
    pymodule,
    "{{ function_name }}_msg__{{join(span(message.type.namespaces, 1, length(message.type.namespaces)), "__") + "__" + module_name }}",
    pyobject_{{ function_name }});
  if (err) {
    // the created capsule needs to be decremented
    Py_XDECREF(pyobject_{{ function_name }});
    // previously added objects will be removed when the module is destroyed
    return err;
  }
{% endfor %}
  return 0;
}
